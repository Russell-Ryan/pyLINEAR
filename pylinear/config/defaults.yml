# Configuration for pyLINEAR (Oct. 30, 2019)

cpu: &CPU
  ncpu: null                             # number of processors to use
  verbose: true

calib: &CALIB
  h5conf: hst_wfc3_ir_beams.h5           # HDF5 file for beam info
  h5flat: null                           # HDF5 file for flat field
  h5siaf: hst_wfc3_ir_detector.h5        # HDF5 file for detectors
    
tables: &TABLES
  path: TABLES2/                         # relative path for the tables
  remake: true                           # force to remake the tables
  gzip: true                             # gzip the resulting data
  nsub: 5                                # num intervals for trap. integrate
  cpu: *CPU                              # import CPU settings
  
sources:
  segmap: seg.fits                       # segmentation map for sources
  obslst: obs.lst                        # file describing the bands
  detindex: 0                            # detection index in obslst
  maglim: 26.                            # magnitude limit of sources
  minpix: 5                              # minimum number of pixels
  filtsig: 0                             # sigma of Gaussian filter
  eroderad: 0                            # num of pix to remove on outer edge
  binfact: 0                             # num of pix to block average
  
modules:
  simulation:
    perform: false                       # flag to run the simulation
    beam: A                              # beams to simulate
    grism: G102                          # which grism to simulate
    imgtype: wcs                         # where WCS comes from: wcs or img
    gzip: true                           # gzip the outputs
    imglst: wcs.lst                      # list of WCS properties
    sedlst: sed.lst                      # list of SEDs
    noise:                               # the noise module
      perform: false                     # flag to perform noise calculation
      exptime: 700.                      # effective exposure time
      skyrate: 0.3                       # background rate in e/s
    cpu: *CPU                            # import CPU settings
    calib: *CALIB                        # import calibration settings
    tables: *TABLES                      # import Tables settings

  extraction:
    perform: true                        # flag to perform the extraction
    mode: golden                         # type of extraction
    group: True                          # flag to group objects
    logdamp: [-5.,0.,0.1]                # damping values (depending on mode)
    outroot: test                        # rootname of output products
    imglst: flt.lst                      # input list of FLTs to extract
    beam: A                              # beam(s) to extract
    mask: null                           # beam(s) to mask
    dqamask: 3583                        # bitmask to apply to the DQA
    lamb0: null                          # starting wavelength in A (optional)
    lamb1: null                          # ending wavelength in A (optional)
    dlamb: null                          # sampling wavelength in A (optional)
    initialize: 'broadband'              # how to initialize the extraction
    lsqr:
      atol: 1e-10                        # see scipy documentation
      btol: 1e-10                        # see scipy documentation
      conlim: 1e10                       # see scipy documentation
      maxiter: 1e5                       # see scipy documentation
      show: False                        # see scipy documentation
    cpu: *CPU                            # import CPU settings
    calib: *CALIB                        # import calibration settings
    tables: *TABLES                      # import table settings
    mcmcunc:
      perform: false                     # flag to do the MCMC uncertainties
      nwalkers: 100                      # num of walkers (see emcee dox)
      nstep: 100                         # num of steps/walker (see emcee dox)
      burn: 0.2                          # fraction to burn (see emcee dox)
      cpu: *CPU                          # import CPU settings
    residuals:
      perform: true                      # flag to compute residuals
      gzip: false                        # flag to gzip output file
          
  cutout:
    perform: false                       # flag to perform the cutouts
    beam: A                              # which beams to cutout
    imglst: flt.lst                      # the observed images to cutout
    padding: [0,2]                       # padding to the cutouts [x,y]
    cpu: *CPU                            # import CPU settings
    calib: *CALIB                        # import calibration settings
    tables: *TABLES                      # import table settings

